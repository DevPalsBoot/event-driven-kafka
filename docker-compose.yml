version: '3.8'
services:
  zookeeper:
    image: 'confluentinc/cp-zookeeper:7.2.1'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-network


  broker-1:
    image: 'confluentinc/cp-kafka:7.2.1'
    hostname: broker-1
    container_name: broker-1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-1:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1 # 토픽 오프셋 복제 계수
    ports:
      - "9092:9092"
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: broker-1:29092
    depends_on: # kafka 실행 후 백엔드 실행되도록 설정
      - broker-1
    networks:
      - app-network
    ports:
      - "8180:8180"


  report:
    build:
      context: ./report
      dockerfile: Dockerfile
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: broker-1:29092
    depends_on: # kafka 실행 후 레포트 실행되도록 설정
      - broker-1
    networks:
      - app-network
    ports:
      - "9090:9090"

networks:
  app-network:
    driver: bridge
